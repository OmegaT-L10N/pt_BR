<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "../../../docbook-xml-4.5/docbookx.dtd">
<appendix id="appendix.Scripts.inOmegaT">
  <title>Scripts<indexterm class="singular">
      <primary>Scripts</primary>
    </indexterm></title>

  <section>
    <title>Introdução</title>

    <para>O OmegaT permite executar scripts em várias linguagens diferentes.</para>
  </section>

  <section>
    <title>Uso</title>

    <para>Ao clicar em <guisubmenu>Ferramentas &gt; </guisubmenu><guisubmenu>Scripts</guisubmenu>, a janela de scripts é aberta:<screenshot> <screeninfo>Janela de scripts</screeninfo> <mediaobject> <imageobject> <imagedata fileref="images/ScriptingDialog.png"/> </imageobject> </mediaobject> </screenshot></para>

    <para>A janela de scripts permite carregar um script existente na área de texto e executá-lo no projeto aberto atual. Para personalizar o recurso de scripts, faça o seguinte:</para>

    <itemizedlist>
      <listitem>
        <para>Na lista do painel esquerdo, clique no nome do script que deseja carregar no editor.</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>Clique com o botão direito em um botão de &quot;&lt;1&gt;&quot; a &quot;&lt;12&gt;&quot; no painel da base da tela e selecione &quot;Adicionar script&quot;. No exemplo acima, dois scripts (posições 1 e 2) já foram adicionados.</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>Ao clicar com o botão esquerdo no número correspondente, o script selecionado será executado. Você pode ativar as macros selecionadas no menu principal ou também usando as opções no menu <guisubmenu>Ferramentas </guisubmenu>ou pressionando<keycap> Ctrl+Alt+F#</keycap> (F# = teclas F1 a F12).</para>
      </listitem>
    </itemizedlist>

    <para>Por padrão, os scripts são armazenados na pasta &quot;scripts&quot;, na pasta de instalação do OmegaT (a pasta que contem o arquivo OmegaT.jar).</para>

    <para>É possível adicionar novos scripts nesta pasta, para que eles apareçam na lista de scripts disponíveis da janela de scripts.</para>

    <para>Alguns scripts adicionais podem ser encontrados aqui: <ulink url="https://sourceforge.net/projects/omegatscripts/">OmegaT Scripts</ulink>
    </para>
  </section>

  <section>
    <title>Linguagens de script</title>

    <para>As seguintes linguagens de script foram implementadas:</para>

    <para><itemizedlist>
        <listitem>
          <para><emphasis role="bold">Groovy</emphasis> (http://groovy.codehaus.org): é uma linguagem dinâmica da máquina virtual Java. Aproveita os pontos fortes do Java mas tem recursos adicionais poderosos inspirados por linguagens como Python, Ruby e Smalltalk.</para>
        </listitem>
      </itemizedlist><itemizedlist>
        <listitem>
          <para><emphasis role="bold">JavaScript</emphasis> (às vezes abreviado como JS, para não ser confundido com o Java): é uma linguagem de script baseada em protótipos, com tipagem fraca e dinâmica e funções de primeira classe. É uma linguagem de multiparadigma, com suporte a estilos de programação orientados a objetos, imperativos e funcionais. Como é a linguagem por trás de programas conhecidos, como o Firefox, é uma ferramenta de programação popular no meio do código aberto.</para>
        </listitem>
      </itemizedlist>Todas as linguagens têm acesso ao modelo de objeto do OmegaT, com o projeto como o objeto principal. O seguinte fragmento de código em groovy, por exemplo, verifica todos os segmentos em todos os arquivos do projeto atual e, se a tradução existir, imprime a fonte e o alvo do segmento:</para>

    <programlisting>    files = project.projectFiles;
    for (i in 0 ..&lt; files.size())
    {
        for (j in 0 ..&lt; files[i].entries.size())
        {
            currSegment = files[i].entries[j];
            if (project.getTranslationInfo(currSegment))
            {
                source = currSegment.getSrcText();
                target = project.getTranslationInfo(currSegment).translation;
                console.println(source + &quot; &gt;&gt;&gt;&gt; &quot; + target);
            }     
        }
    }</programlisting>
  </section>
</appendix>